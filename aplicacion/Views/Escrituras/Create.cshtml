@model aplicacion.ViewModels.EscrituraViewModel


@{
    ViewData["Title"] = "Create";
}
@using (Html.BeginForm("Create", "Escrituras", FormMethod.Post))
{
    <style>
        .card {
            margin-bottom: 2em;
        }

        .tr {
            margin: 3em;
        }

        .td {
            margin: em;
        }

        .default {
            width: 100%;
            margin: 0 auto;
            border-collapse: collapse;
            border-spacing: 0;
        }


            .default table {
                width: 100%;
                margin: 0 auto;
                border-collapse: collapse;
                border-spacing: 0;
            }

            .default th,
            .default td {
                border: 1px solid #ccc;
                padding: 8px;
                text-align: left;
            }

            .default th {
                background-color: #f2f2f2;
            }

            .default tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            .default tr:hover {
                background-color: #ddd;
            }

        .add_button button {
            margin-top: 20px;
        }

        .div_button {
            margin-top: 20px;
        }

    </style>
    <h1>Create</h1>

    <h4>Enajenante</h4>
    <hr />
    <head>
        
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        
    </head>
    <div class="row">


        <div class="card">
            <div class="card-header bg-primary mb-3">
                INFORMACIÓN GENERAL
            </div>
            <div class="card-body">
                <table class="default">
                    <tr>
                        <td>
                            <label for="CNE">CNE</label>
                        </td>
                        <td>
                            <div class="form-group">
                                <select asp-for="@Model.Escritura.Cne" class="form-control">
                                    <option value="compraventa" selected>Compraventa</option>
                                    <option value="regularizacion">Regularización de Patrimonio</option>
                                </select>
                                <span asp-validation-for="@Model.Escritura.Cne" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <label for="COMUNA">Comuna:</label>
                        </td>
                        <td>
                         <div class="form-group">
                            <label asp-for="@Model.Escritura.Comuna" class="control-label"></label>
                            <select asp-for="@Model.Escritura.Comuna" asp-items="@(new SelectList(Model.Comunas))" class="form-control">
                            </select>
                            <span asp-validation-for="@Model.Escritura.Comuna" class="text-danger"></span>
                        </div>
                        </td>
                        <td>
                            <label for="Fecha_llenado">Fecha Llenado:</label>
                        </td>
                        <td>
                            <div class="form-group">
                               
                                <input asp-for="@Model.Escritura.FechaInscripcion" class="form-control" />
                                <span asp-validation-for="@Model.Escritura.FechaInscripcion" class="text-danger"></span>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="Manzana">Manzana:</label>
                        </td>
                        <td>
                            <div class="form-group">
                                
                                <input asp-for="@Model.Escritura.Manzana" class="form-control" />
                                <span asp-validation-for="@Model.Escritura.Manzana" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <label for="Predio">predio :</label>
                        </td>
                        <td>
                            <div class="form-group">
                                
                                <input asp-for="@Model.Escritura.Predio" class="form-control" />
                                <span asp-validation-for="@Model.Escritura.Predio" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <label for="Ninscripcion">Numero de inscripcion:</label>
                        </td>
                        <td>
                            <div class="form-group">
                                
                                <input asp-for="@Model.Escritura.NumeroInscripcion" class="form-control" />
                                <span asp-validation-for="@Model.Escritura.NumeroInscripcion" class="text-danger"></span>
                            </div>
                        </td>

                    </tr>
                    <tr>
                        <td>
                            <label for="Foja">Fojas:</label>
                        </td>
                        <td>
                            <div class="form-group">
                               
                                <input asp-for="@Model.Escritura.Fojas" class="form-control" />
                                <span asp-validation-for="@Model.Escritura.Fojas" class="text-danger"></span>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="card" id = "Enajenantes">
            <div class="card-header bg-primary mb-3">
                INFORMACIÓN DE LOS Enajenantes(S) O CAUSANTE(S)
            </div>
            <div class="card-body">

                <table class="default" id="Enajenante">
                    <tr>

                        <th>RUT</th>

                        <th>% Derechos</th>

                        <th>Porcentaje Derecho no Acreditado</th>

                    </tr>
                </table>

                <div id="div_button">
                    <button id="add_button" type="button" class="btn btn-primary  rounded-pill" onclick="addNewRowE()"> Agregar fila</button>
                </div>

            </div>
        </div>
        <div class="card" id="Adquirientes">
            <div class="card-header bg-primary mb-3">
                INFORMACIÓN DE LOS ADQUIRENTE(S) O CAUSANTE(S)
            </div>
            <div class="card-body">

                <table class="default" id="Adquirente">
                    <tr>

                        <th>RUT</th>

                        <th>% Derechos</th>

                        <th>Porcentaje Derecho no Acreditado</th>

                        <th> </th>

                    </tr>
                </table>


                <div id="div_button">
                    <button id="add_button" type="button" class="btn btn-primary  rounded-pill" onclick="addNewRow()"> Agregar fila</button>
                </div>

            </div>
        </div>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

        <script>
            $(document).ready(function () {
                // Oculta el div al cargar la página
                    $('#Enajenantes').show();

                // Cuando se selecciona una opción en el select
                $('select').change(function () {
                    if ($(this).val() === 'regularizacion') {
                        
                       
                        // Si la opción seleccionada es "regularizacion", oculta el div
                        $('#Enajenantes').hide();
                    } else {
                        // De lo contrario, muestra el div
                        $('#Enajenantes').show();
                    }
                });
            });


        </script>
       <script>
            
                $(document).ready(function () {
                    $('form').submit(function () {
                        if ('input[name="Adquirente.RunRut"]'.length === 0) {
                            alert('Debe existir minimo un Enajenante');
                            return false; // Evita el envío del formulario

                        }
                        var adquirentePorcentajeTotal = 0;
                        var hasError = false;

                        // Suma los porcentajes de adquirente y verifica que no sean negativos
                        $('input[name="Adquirente.PorcentajeDerecho"]').each(function () {
                            var porcentaje = parseFloat($(this).val());
                            if (isNaN(porcentaje) || porcentaje < 0) {
                                hasError = true;
                                return false;
                            }
                            if (porcentaje > 0 && $(this).siblings('input[name="Adquirente.PorcentajeDerechoNoAcreditado"]').val() !== "true") {
                                adquirentePorcentajeTotal += porcentaje;
                            }
                        });

                        // Verifica que la suma de los porcentajes sea menor o igual a 100
                        if (adquirentePorcentajeTotal > 100) {
                            hasError = true;
                        }

                        // Muestra mensaje de error si es necesario
                        if (hasError) {
                            alert('Por favor revise los porcentajes de Adquirente. La suma de los porcentajes no puede ser mayor a 100 y los valores no pueden ser negativos');
                            return false; // Evita el envío del formulario
                        }
                    });
                });
            

       </script>
        <script>
            $(document).ready(function () {
                $('form').submit(function () {
                    if ('input[name="Enajenante.RunRut"]'.length === 0) {
                        alert('Debe existir minimo un Enajenante');
                        return false; // Evita el envío del formulario

                    }
                    var adquirentePorcentajeTotal = 0;
                    var hasError = false;

                    // Suma los porcentajes de adquirente y verifica que no sean negativos
                    $('input[name="Enajenante.PorcentajeDerecho"]').each(function () {
                        
                        if ($(this).siblings('input[name="Enajenante.PorcentajeDerechoNoAcreditado"]').val() !== true ) {
                            var porcentaje = parseFloat($(this).val());
                            if (isNaN(porcentaje) || porcentaje < 0) {
                                hasError = true;
                                return false;
                            }
                            if (porcentaje > 0) {
                                adquirentePorcentajeTotal += porcentaje;
                            }
                        }
                    });

                    // Verifica que la suma de los porcentajes sea menor o igual a 100
                    if (adquirentePorcentajeTotal > 100) {
                        hasError = true;
                    }

                    // Muestra mensaje de error si es necesario
                    if (hasError) {
                        alert('Por favor revise los porcentajes de Enajenante. La suma de los porcentajes no puede ser mayor a 100 y los valores no pueden ser negativos');
                        return false; // Evita el envío del formulario
                    }
                });
            });

        </script>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>


    </div>
   

}

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function uncheckOther(currentCheckboxId, otherCheckboxId) {
            var currentCheckbox = document.getElementById(currentCheckboxId);
            var otherCheckbox = document.getElementById(otherCheckboxId);

            otherCheckbox.checked = !currentCheckbox.checked;
        }

        function myCreateFunction() {
            var table = document.getElementById("myTable");
            var row = table.insertRow(0);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            cell1.innerHTML = "NEW CELL1";
            cell2.innerHTML = "NEW CELL2";
        }

        function addNewRow() {
            var table = document.getElementById("Adquirente");
            var rowCount = table.rows.length;
            var cellCount = table.rows[0].cells.length;
            var row = table.insertRow(rowCount);
            for (var i = 0; i < cellCount; i++) {
                var cell = row.insertCell(i);
                if (i == 0) {
                    cell.innerHTML = '@Html.TextBoxFor(model => model.Adquirente.RunRut, new { @class = "form-control" })';
                } else if (i == 1) {
                    cell.innerHTML = '@Html.TextBoxFor(model => model.Adquirente.PorcentajeDerecho, new { @class = "form-control" })';
                } else if (i == 2) {
                    cell.innerHTML = '@Html.CheckBoxFor(model => model.Adquirente.PorcentajeDerechoNoAcreditado, new { @class = "form-check-input", onclick = "checkPorcentaje(this)" })';
                } else {
                    cell.innerHTML = '<button class="btn btn-danger" data-rowid="' + rowCount + '">Delete</button>';
                }
            }
            // Add a click event listener to the new delete button
            var newDeleteButton = row.querySelector('button[data-rowid="' + rowCount + '"]');
            newDeleteButton.addEventListener('click', function () { deleteRow(tableId, this); });

        }
        function addNewRowE() {
            var table = document.getElementById("Enajenante");
            var rowCount = table.rows.length;
            var cellCount = table.rows[0].cells.length;
            var row = table.insertRow(rowCount);
            for (var i = 0; i < cellCount; i++) {
                var cell = row.insertCell(i);
                if (i == 0) {
                    cell.innerHTML = '@Html.TextBoxFor(model => model.Enajenante.RunRut, new { @class = "form-control" })';
                } else if (i == 1) {
                    cell.innerHTML = '@Html.TextBoxFor(model => model.Enajenante.PorcentajeDerecho, new { @class = "form-control" })';
                } else if (i == 2) {
                    cell.innerHTML = '@Html.CheckBoxFor(model => model.Enajenante.PorcentajeDerechoNoAcreditado, new { @class = "form-check-input", onclick = "checkPorcentaje(this)" })';
                } else {
                    cell.innerHTML = '<button class="btn btn-danger" data-rowid="' + rowCount + '">Delete</button>';
                }
            }
            // Add a click event listener to the new delete button
            var newDeleteButton = row.querySelector('button[data-rowid="' + rowCount + '"]');
            newDeleteButton.addEventListener('click', function () { deleteRow(tableId, this); });

        }

        function checkPorcentaje(cb) {
            var row = cb.parentNode.parentNode;
            var porcentajeInput = row.cells[1].querySelector('input[type="text"]');
            if (cb.checked) {
                porcentajeInput.value = '0';
                porcentajeInput.disabled = true;
            } else {
                porcentajeInput.value = '';
                porcentajeInput.disabled = false;
            }
        }

        function deleteRow(table, button) {
            var row = button.parentNode.parentNode;
            table.deleteRow(row.rowIndex);
        }

        function deleteRowE(ele) {
            var table = document.getElementById("Enajenante");
            var rowCount = table.rows.length;
            if (rowCount <= 1) {
                alert("There is no row available to delete!");
                return;
            }
            if (ele) {
                //delete specific row
                ele.parentNode.parentNode.remove();
            } else {
                //delete last row
                table.deleteRow(rowCount - 1);
            }
        }

            
    </script>
}